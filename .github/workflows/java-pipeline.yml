
name: "java_app_pipeline"

on:
  push:
#   branches: [ main, develop, feature, hotfix, release ]

jobs:
  Codebuild:
    name: Codebuild
    uses: "./.github/workflows/Build_Stage.yml"
    with:
       runnerName: "ubuntu-latest"
       java-version: "11"
       distribution: "temurin"
       cache: "maven" 
    
#   CodeScanning:
#     name: Test - SonarCloud Scan
#     uses: "./.github/workflows/Code_Quality_Stage.yml"
#     needs: [ Codebuild ]
#     secrets:
     
#       GITTOKEN: "${{ secrets.GITTOKEN }}"
#       SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
     
#     with:
#        java-version : "11.0.4"
#        runnerName: "ubuntu-latest"
            
#   buildImageandDeploy:
#     name: building docker image
#     needs: [ Codebuild]
#     uses: "./.github/workflows/deploystage.yml"
#     secrets:
#        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#        RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
#        CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
#        CONATINER_NAME: ${{ env.CONATINER_NAME }}
#        AZURE_CONTAINER_REGISTRY: ${{ env.AZURE_CONTAINER_REGISTRY }}
#     with:
#       runnerName: "ubuntu-latest"
      
  TrivyScanner:
      name: Trivyscanner
      uses: "./.github/workflows/trivy.yml"
      needs: [ Codebuild ] 
      secrets:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      with:
       runnerName: "ubuntu-latest"
       
#   Terraform:
#       name: Terraform 
#       uses: "./.github/workflows/terraform.yml"
#       #needs: [ Codebuild,buildImageandDeploy ]
#       with:
#        runnerName: "ubuntu-latest"
      
      
